{"version":3,"sources":["farmers.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","_toConsumableArray","arr","Array","isArray","arr2","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","from","_iterableToArray","TypeError","_nonIterableSpread","window","addEventListener","panelWidthFix","accordionBlock","accordionTarget","targetPanel","nextSibling","nextElementSibling","offset","parentElement","offsetLeft","style","marginLeft","width","concat","offsetWidth","slice","document","querySelectorAll","forEach","accordion","allowToggle","hasAttribute","triggers","panels","map","target","event","classList","contains","isExpanded","getAttribute","active","querySelector","setAttribute","getElementById","removeAttribute","preventDefault","activePanel","filter","el","scrollIntoView","behavior","key","which","ctrlModifier","ctrlKey","match","index","indexOf","direction","focus","click","trigger","add","remove","expanded","cardAccordion","evt","toggle","innerHTML","2","./Components/accordion.js"],"mappings":"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","file":"farmers.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nwindow.addEventListener('load', function () {\n  function panelWidthFix(accordionBlock, accordionTarget) {\n    var targetPanel = accordionTarget.nextSibling.nextElementSibling;\n    var offset = 10 + (accordionTarget.parentElement.offsetLeft - accordionBlock.offsetLeft) * -1 + 'px';\n    targetPanel.style.marginLeft = offset;\n    targetPanel.style.width = \"\".concat(accordionBlock.offsetWidth - 65, \"px\");\n  }\n\n  Array.prototype.slice.call(document.querySelectorAll('.Accordion')).forEach(function (accordion) {\n    // Allow for multiple accordion sections to be expanded at the same time\n    var allowMultiple = false; // we don't want multiple accordion sections to be expanded at the same time\n    // Allow for each toggle to both open and close individually\n\n    var allowToggle = accordion.hasAttribute('data-allow-toggle'); // Create the array of toggle elements for the accordion group\n\n    var triggers = _toConsumableArray(accordion.querySelectorAll('.Accordion-trigger'));\n\n    var panels = _toConsumableArray(accordion.querySelectorAll('.Accordion-panel'));\n\n    triggers.map(function (target) {\n      panelWidthFix(accordion, target);\n    });\n    accordion.addEventListener('click', function (event) {\n      var target = event.target;\n      target.parentElement.parentElement.classList.contains('Accordion-trigger') ? target = target.parentElement.parentElement : target.parentElement.classList.contains('Accordion-trigger') ? target = target.parentElement : ''; // Kind of a hack to set target element correctly\n\n      if (target.classList.contains('Accordion-trigger')) {\n        // Check if the current toggle is expanded.\n        var isExpanded = target.getAttribute('aria-expanded') == 'true';\n        var active = accordion.querySelector('[aria-expanded=\"true\"]'); // without allowMultiple, close the open accordion\n\n        if (!allowMultiple && active && active !== target) {\n          // Set the expanded state on the triggering element\n          active.setAttribute('aria-expanded', 'false'); // Hide the accordion sections, using aria-controls to specify the desired section\n\n          document.getElementById(active.getAttribute('aria-controls')).setAttribute('hidden', ''); // When toggling is not allowed, clean up disabled state\n\n          if (!allowToggle) {\n            active.removeAttribute('aria-disabled');\n          }\n        }\n\n        if (!isExpanded) {\n          // Set the expanded state on the triggering element\n          target.setAttribute('aria-expanded', 'true'); // Hide the accordion sections, using aria-controls to specify the desired section\n\n          document.getElementById(target.getAttribute('aria-controls')).removeAttribute('hidden'); // If toggling is not allowed, set disabled state on trigger\n\n          if (!allowToggle) {\n            target.setAttribute('aria-disabled', 'true');\n          }\n        } else if (allowToggle && isExpanded) {\n          // Set the expanded state on the triggering element\n          target.setAttribute('aria-expanded', 'false'); // Hide the accordion sections, using aria-controls to specify the desired section\n\n          document.getElementById(target.getAttribute('aria-controls')).setAttribute('hidden', '');\n        }\n\n        event.preventDefault();\n      }\n\n      var activePanel = panels.filter(function (el) {\n        return !el.hasAttribute('hidden');\n      })[0];\n      activePanel ? activePanel.scrollIntoView({\n        behavior: \"smooth\"\n      }) : '';\n    }); // Bind keyboard behaviors on the main accordion container\n\n    accordion.addEventListener('keydown', function (event) {\n      var target = event.target;\n      var key = event.which.toString();\n      var isExpanded = target.getAttribute('aria-expanded') == 'true';\n      var allowToggle = allowMultiple ? allowMultiple : accordion.hasAttribute('data-allow-toggle'); // 33 = Page Up, 34 = Page Down\n\n      var ctrlModifier = event.ctrlKey && key.match(/33|34/); // Is this coming from an accordion header?\n\n      if (target.classList.contains('Accordion-trigger')) {\n        // Up/ Down arrow and Control + Page Up/ Page Down keyboard operations\n        // 38 = Up, 40 = Down\n        if (key.match(/38|40/) || ctrlModifier) {\n          var index = triggers.indexOf(target);\n          var direction = key.match(/34|40/) ? 1 : -1;\n          var length = triggers.length;\n          var newIndex = (index + length + direction) % length;\n          triggers[newIndex].focus();\n          event.preventDefault();\n        } else if (key.match(/35|36/)) {\n          // 35 = End, 36 = Home keyboard operations\n          switch (key) {\n            // Go to first accordion\n            case '36':\n              triggers[0].focus();\n              break;\n            // Go to last accordion\n\n            case '35':\n              triggers[triggers.length - 1].focus();\n              break;\n          }\n\n          event.preventDefault();\n        } else if (key.match(/32|13/)) {\n          // 13 = Enter, 32 = Space keyboard operations\n          target.click();\n        }\n      }\n    }); // These are used to style the accordion when one of the buttons has focus\n\n    accordion.querySelectorAll('.Accordion-trigger').forEach(function (trigger) {\n      trigger.addEventListener('focus', function (event) {\n        accordion.classList.add('focus');\n        event.target.classList.add('focus');\n      });\n      trigger.addEventListener('blur', function (event) {\n        accordion.classList.remove('focus');\n        event.target.classList.remove('focus');\n      });\n    }); // Minor setup: will set disabled state, via aria-disabled, to an\n    // expanded/ active accordion which is not allowed to be toggled close\n\n    if (!allowToggle) {\n      // Get the first expanded/ active accordion\n      var expanded = accordion.querySelector('[aria-expanded=\"true\"]'); // If an expanded/ active accordion is found, disable\n\n      if (expanded) {\n        expanded.setAttribute('aria-disabled', 'true');\n      }\n    }\n  });\n  window.addEventListener('resize', function () {\n    _toConsumableArray(document.querySelectorAll('.Accordion')).map(function (accordion) {\n      _toConsumableArray(accordion.querySelectorAll('.Accordion-trigger')).map(function (target) {\n        panelWidthFix(accordion, target);\n      });\n    });\n  });\n\n  var accordion_card_array = _toConsumableArray(document.querySelectorAll('.Card-Accordion'));\n\n  accordion_card_array.map(function (cardAccordion) {\n    cardAccordion.addEventListener('click', function (evt) {\n      var target = evt.target;\n      target.parentElement.parentElement.parentElement.classList.contains('Card-Accordion') ? target = target.parentElement.parentElement.parentElement : target.parentElement.parentElement.classList.contains('Card-Accordion') ? target = target.parentElement.parentElement : target.parentElement.classList.contains('Card-Accordion') ? target = target.parentElement : '';\n      target.querySelector('.card-accordion-content').classList.toggle('show');\n      target.querySelector('.card-accordion-toggle > a').classList.toggle('card-accordion-show-less');\n\n      if (target.querySelector('.card-accordion-content').classList.contains('show')) {\n        target.querySelector('.card-accordion-content.show').scrollIntoView({\n          behavior: \"smooth\"\n        });\n        target.querySelector('.card-accordion-toggle > a').innerHTML = 'Show Less';\n      } else {\n        target.querySelector('.card-accordion-toggle > a').innerHTML = 'Show More';\n      }\n    });\n    cardAccordion.addEventListener('keydown', function (event) {\n      var target = event.target;\n      var key = event.which.toString();\n\n      if (key.match(/32|13/)) {\n        cardAccordion.click();\n      }\n    });\n  });\n});\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nrequire(\"./Components/accordion.js\");\n\n},{\"./Components/accordion.js\":1}]},{},[2]);\n"]}